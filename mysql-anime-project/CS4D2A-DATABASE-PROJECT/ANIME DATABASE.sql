--ANIME DATABASE--

--CREATE TABLES--
CREATE TABLE ANIME(
  TITLE VARCHAR(50),
  ANIME_ID INT,
  CREATOR VARCHAR(30),
  TYPE VARCHAR(10),
  RATING INT,
  EPISODES INT,
  AIRED DATE,
  ENDED DATE,  
  CONSTRAINT ANIME_PK PRIMARY KEY (TITLE),
  CONSTRAINT CHK_TYPE  CHECK ((TYPE = 'OVA') OR (TYPE = 'MOVIE') OR (TYPE = 'TV SERIES')),
  CONSTRAINT CHK_RATING CHECK (RATING<=10.00)
    );

ALTER TABLE ANIME
ADD COLUMN STATUS VARCHAR(15);

CREATE TABLE CHARACTER_LIST( 
    CHARACTER_ID INT,
    ANIME VARCHAR(50),
    NAME VARCHAR(30),
    GENDER VARCHAR(1),
    RATING INT,
    CONSTRAINT CHARACTER_PK PRIMARY KEY (CHARACTER_ID),
    CONSTRAINT CHK_GENDER  CHECK ((GENDER = 'F') OR (GENDER = 'M')),
    CONSTRAINT CHK_RATING CHECK (RATING<=10.00)
    );

CREATE TABLE CREATOR( 
	CREATOR_ID INT, 
	ANIME VARCHAR(50), 
	NAME VARCHAR(30), 
	GENDER VARCHAR(1), 
	DATE_OF_BIRTH DATE, 
	DATE_OF_DEATH DATE, 
	RATING INT, 
	CONSTRAINT CREATOR_PK PRIMARY KEY (CREATOR_ID), 
	CONSTRAINT CHK_GENDER CHECK ((GENDER = 'F') OR (GENDER = 'M')), 
	CONSTRAINT CHK_RATING CHECK (RATING<=10.00) 
	);

CREATE TABLE OPENING( 
	SONG_ID INT, 
	ANIME VARCHAR(50), 
	NAME VARCHAR(30), 
	PERFORMER VARCHAR(30),
    LENGTH INT,
	RATING INT, 
	CONSTRAINT SONG_PK PRIMARY KEY (SONG_ID),
    CONSTRAINT CHK_LENGTH CHECK (LENGTH <= 2.00),
	CONSTRAINT CHK_RATING CHECK (RATING<=10.00) 
	);

CREATE TABLE LATEST( 
	ANIME_ID INT, 
	ANIME VARCHAR(50), 
	GROUP_NAME VARCHAR(30), 
	INFO VARCHAR(30),
    CONSTRAINT LATEST_PK PRIMARY KEY (ANIME_ID)
    );

CREATE TABLE GROUP_LIST(
  ANIME VARCHAR(50),
  GROUP_ID INT,
  NAME VARCHAR(30),
  P_NAME VARCHAR(30),
  LANGUAGES VARCHAR(30),
  RATING INT,
  DATE_ESTABLISHED DATE,
  URL VARCHAR(50),  
  CONSTRAINT GROUP_PK PRIMARY KEY (GROUP_ID),
  CONSTRAINT CHK_RATING CHECK (RATING<=10.00)
    );

CREATE TABLE VIDEO_LIST(
  ANIME VARCHAR(50),
  VIDEO_ID INT,
  SERVER_NAME VARCHAR(30),
  RATING INT,
  URL VARCHAR(50),  
  CONSTRAINT VIDEO_PK PRIMARY KEY (VIDEO_ID),
  CONSTRAINT CHK_RATING CHECK (RATING<=10.00)
    );

CREATE TABLE USER_LIST(
  ANIME VARCHAR(50),
  USER_NAME VARCHAR(30),
  PASSWORD VARCHAR(30),
  STATUS VARCHAR(20),
  RATING INT,
  CONSTRAINT USER_NAME PRIMARY KEY (USER_NAME),
  CONSTRAINT STATUS CHECK ((STATUS='WATCHING') OR (STATUS='WATCHED') OR (STATUS='WILL WATCH')),  
  CONSTRAINT CHK_RATING CHECK (RATING<=10.00)
	);

--SELECT--
SELECT * FROM ANIME;
SELECT * FROM CHARACTER_LIST;
SELECT * FROM CREATOR;
SELECT * FROM GROUP_LIST;
SELECT * FROM LATEST;
SELECT * FROM OPENING;
SELECT * FROM USER_LIST;
SELECT * FROM VIDEO_LIST;

--DROP--
DROP TABLE CHARACTER_LIST;
DROP TABLE CREATOR;
DROP TABLE GROUP_LIST;
DROP TABLE LATEST;
DROP TABLE OPENING;
DROP TABLE USER_LIST;
DROP TABLE VIDEO_LIST;
DROP TABLE ANIME;

--FOREIGN KEYS--
ALTER TABLE CHARACTER_LIST
ADD CONSTRAINT ANIME_FK
FOREIGN KEY(ANIME)
REFERENCES ANIME(TITLE);

ALTER TABLE CREATOR
ADD CONSTRAINT ANIME_FK1
FOREIGN KEY(ANIME)
REFERENCES ANIME(TITLE);

ALTER TABLE GROUP_LIST
ADD CONSTRAINT ANIME_FK2
FOREIGN KEY(ANIME)
REFERENCES ANIME(TITLE);

ALTER TABLE LATEST
ADD CONSTRAINT ANIME_FK3
FOREIGN KEY(ANIME)
REFERENCES ANIME(TITLE);

ALTER TABLE OPENING
ADD CONSTRAINT ANIME_FK4
FOREIGN KEY(ANIME)
REFERENCES ANIME(TITLE);

ALTER TABLE USER_LIST
ADD CONSTRAINT ANIME_FK5
FOREIGN KEY(ANIME)
REFERENCES ANIME(TITLE);

ALTER TABLE VIDEO_LIST
ADD CONSTRAINT ANIME_FK6
FOREIGN KEY(ANIME)
REFERENCES ANIME(TITLE);

--INSERTS--
INSERT INTO ANIME VALUES('NARUTO ORIGINAL',1,'Masashi Kishimoto','TV SERIES',9.27,220,'2002-10-03','2007-02-08','COMPLETED');
INSERT INTO ANIME VALUES('NARUTO SHIPPUDEN',2,'Masashi Kishimoto','TV SERIES',9.81,500,'2007-02-15','2017-03-23','COMPLETED');
INSERT INTO ANIME VALUES('BORUTO:NARUTO THE MOVIE',3,'UKYO KODACHI','MOVIE',9.03,4,'2015-08-07','2015-08-07','COMPLETED');
INSERT INTO ANIME VALUES('BORUTO:NARUTO NEXT GENERATIONS',4,'UKYO KODACHI','TV SERIES',8.53,83,'2017-04-05','2018-11-26','ON-GOING');
INSERT INTO ANIME VALUES('The Day Naruto Became Hokage',5,'Masashi Kishimoto','OVA',8.53,1,'2016-05-04','2016-05-04','COMPLETED');
INSERT INTO ANIME VALUES('BOKU NO HERO ACADEMIA',6,'Kohei Horikoshi','TV SERIES',9.53,75,'2016-05-04','','ON-GOING');
INSERT INTO ANIME VALUES('KIMI NO NA WA',7,'MAKATO SHINKAI','MOVIE',10,1,'2016-05-04','','COMPLETED');

INSERT INTO CHARACTER_LIST VALUES( 1, 'NARUTO ORIGINAL', 'NARUTO', 'M', 9.43);
INSERT INTO CHARACTER_LIST VALUES( 2, 'NARUTO ORIGINAL', 'SASUKE', 'M', 8.37);
INSERT INTO CHARACTER_LIST VALUES( 3, 'NARUTO ORIGINAL', 'SAKURA', 'F', 8.67);
INSERT INTO CHARACTER_LIST VALUES( 4, 'NARUTO ORIGINAL', 'KAKASHI', 'M', 8.63);
INSERT INTO CHARACTER_LIST VALUES( 5, 'NARUTO ORIGINAL', 'YAMATO', 'M', 8.33);

INSERT INTO CREATOR VALUES(1,'NARUTO ORIGINAL','Masashi Kishimoto','M','1974-11-08','',7.56);
INSERT INTO CREATOR VALUES(2,'NARUTO SHIPPUDEN','Masashi Kishimoto','M','1974-11-08','',7.56);
INSERT INTO CREATOR VALUES(3,'BORUTO:NARUTO NEXT GENERATIONS','UKYO KODACHI','M','1979-04-01','',7.56);
INSERT INTO CREATOR VALUES(4,'BOKU NO HERO ACADEMIA','Kohei Horikoshi','M','1987-07-09','',9);
INSERT INTO CREATOR VALUES(5,'KIMI NO NA WA','MAKATO SHINKAI','M','1983-02-19','',10);


INSERT INTO OPENING VALUES(1,'NARUTO ORIGINAL','No Boy,No Cry','Stance Punks',3.33,7.56);
INSERT INTO OPENING VALUES(2,'NARUTO SHIPPUDEN','BLUE BIRD','Ikimono-Gakari',3.36,7.83);
INSERT INTO OPENING VALUES(3,'BORUTO:NARUTO NEXT GENERATIONS','Lonely Go!','Brian the Sun',3.39,7.83);
INSERT INTO OPENING VALUES(4,'NARUTO SHIPPUDEN','DIVER','ELENA',2.39,8);
INSERT INTO OPENING VALUES(5,'KIMI NO NA WA','GO ON','THE TEANGENT',3.37,10);


INSERT INTO LATEST VALUES(1,'BORUTO:NARUTO NEXT GENERATIONS','Tv Tokyo','The ninja adventures continue with Naruto’s son, Boruto!Naruto was a young shinobi with an incorrigible knack for mischief. He achieved his dream to become the greatest ninja in his village, and now his face sits atop the Hokage monument. But this is not his story... ...');
INSERT INTO LATEST VALUES(2,'NARUTO ORIGINAL','Tv Tokyo','...');
INSERT INTO LATEST VALUES(3,'NARUTO SHIPPUDEN','Tv Tokyo','...');
INSERT INTO LATEST VALUES(4,'KIMI NO NA WA','VIZ MEDIA','...');
INSERT INTO LATEST VALUES(5,'BOKU NO HERO ACADEMIA','YOUPEI','...');

INSERT INTO GROUP_LIST VALUES('BORUTO:NARUTO NEXT GENERATIONS',1,'Tv Tokyo','VIZ MEDIA','JAPANESE,ENGLISH',6.98,'','');
INSERT INTO GROUP_LIST VALUES('NARUTO ORIGINAL',2,'Tv Tokyo','VIZ MEDIA','JAPANESE,ENGLISH',6,'','');
INSERT INTO GROUP_LIST VALUES('NARUTO SHIPPUDEN',3,'Tv Tokyo','VIZ MEDIA','JAPANESE,ENGLISH',6,'','');
INSERT INTO GROUP_LIST VALUES('BOKU NO HERO ACADEMIA',4,'Tv Tokyo','VIZ MEDIA','JAPANESE,ENGLISH',8,'','');
INSERT INTO GROUP_LIST VALUES('KIMI NO NA wA',5,'Tv Tokyo','VIZ MEDIA','JAPANESE,ENGLISH',9,'','');

INSERT INTO VIDEO_LIST VALUES('BORUTO:NARUTO NEXT GENERATIONS',1,'RAPIDFIRE',6.98,'WWW.GOGOANIME.TV');
INSERT INTO VIDEO_LIST VALUES('NARUTO ORIGINAL',2,'RAPIDFIRE',7,'WWW.GOGOANIME.TV');
INSERT INTO VIDEO_LIST VALUES('NARUTO SHIPPUDEN',3,'RARE',8,'WWW.GOGOANIME.TV');
INSERT INTO VIDEO_LIST VALUES('BOKU NO HERO ACADEMIA',4,'FIRE',9,'WWW.GOGOANIME.TV');
INSERT INTO VIDEO_LIST VALUES('KIMI NO NA WA',5,'RAP',10,'WWW.GOGOANIME.TV');

INSERT INTO USER_LIST VALUES('BORUTO:NARUTO NEXT GENERATIONS','MORDRED_002','GOGOTAH','ONGOING',7.54);
INSERT INTO USER_LIST VALUES('NARUTO SHIPPUDEN','007','GOGOTAH','ONGOING',7);
INSERT INTO USER_LIST VALUES('NARUTO ORIGINAL','003','GOGOTAH','ONGOING',8);
INSERT INTO USER_LIST VALUES('BOKU NO HERO ACADEMIA','004','GOGOTAH','ONGOING',9);
INSERT INTO USER_LIST VALUES('KIMI NO NA WA','005','GOGOTAH','ONGOING',10);

--TRIGGERS/VIEWS--

delimiter |
CREATE TRIGGER addANIME AFTER INSERT ON ANIME 
  FOR EACH ROW
  BEGIN
    INSERT INTO LATEST SET ANIME = NEW.TITLE  ;
    END;
| 

delimiter ;

delimiter |

CREATE TRIGGER addUSER AFTER INSERT ON VIDEO_LIST 
  FOR EACH ROW
  BEGIN
    INSERT INTO USER_LIST SET ANIME = NEW.ANIME  ;
    INSERT INTO USER_LIST SET USER_NAME = NEW.SERVER_NAME  ;
       
    END;
|

delimiter ;

delimiter |
CREATE TRIGGER V_USER BEFORE DELETE ON USER_LIST 
  FOR EACH ROW
  BEGIN
      DELETE FROM CREATOR WHERE ANIME = USER_LIST.ANIME;
      END;
|

delimiter ;

CREATE VIEW v AS SELECT ANIME_ID, TITLE, CREATOR, RATING FROM ANIME;
CREATE VIEW W AS SELECT CHARACTER_ID, NAME, GENDER, ANIME, RATING FROM CHARACTER_LIST;
CREATE VIEW X AS SELECT GROUP_ID, NAME, P_NAME, ANIME, RATING, URL FROM GROUP_LIST;

Create ROLE Changer IDENTIFIED by killua;
Grant create table to Changer;
Grant delete table to Changer;
REVOKE CREATE TABLE FROM Changer;

Grant Changer to Gon;